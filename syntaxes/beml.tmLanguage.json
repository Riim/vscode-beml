{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "beml",
	"patterns": [
		{ "include": "#namespace_declaration" },
		{ "include": "#super_call" },
		{ "include": "#tag_name" },
		{ "include": "#element_names" },
		{ "include": "#attributes_block" },
		{ "include": "#single_quote_string" },
		{ "include": "#double_quote_string" },
		{ "include": "#multiline_string" },
		{ "include": "#inline_comment" },
		{ "include": "#multiline_comment" }
	],
	"repository": {
		"namespace_declaration": {
			"name": "support.class.beml",
			"match": "#[a-zA-Z][\\-\\w]*",
			"patterns": []
		},
		"tag_name": {
			"name": "entity.name.tag.beml",
			"match": "@?[a-zA-Z][\\-\\w]*(?::[_a-zA-Z][\\-\\w]*)?",
			"patterns": []
		},
		"element_names": {
			"name": "function.declaration.beml",
			"match": "/(?:\\s*([a-zA-Z][\\-\\w]*))?(?:\\s*,\\s*[a-zA-Z][\\-\\w]*)*",
			"captures": {
				"1": { "name": "entity.name.function.beml" }
			},
			"patterns": []
		},
		"attributes_block": {
			"name": "meta.tagname.beml",
			"begin": "\\(",
			"end": "\\)",
			"patterns": [
				{ "include": "#super_call" },
				{
					"name": "variable.parameter.beml",
					"match": "[_a-zA-Z][\\-\\w]*(?::[_a-zA-Z][\\-\\w]*)?"
				},
				{
					"name": "string.beml",
					"begin": "(=)\\s*(?!['\"`,)])",
					"beginCaptures": {
						"1": { "name": "keyword.operator.assignment.beml" }
					},
					"end": "\\S(?=\\s*[\\r\\n,)])"
				},
				{
					"name": "keyword.operator.assignment.beml",
					"match": "="
				},
				{ "include": "#single_quote_string" },
				{ "include": "#double_quote_string" },
				{ "include": "#multiline_string" },
				{ "include": "#inline_comment" },
				{ "include": "#multiline_comment" }
			]
		},
		"super_call": {
			"name": "storage.type.function.call.beml",
			"match": "\\bsuper(?:\\.([a-zA-Z][\\-\\w]*))?(!)",
			"captures": {
				"1": { "name": "entity.name.function.beml" }
			},
			"patterns": []
		},
		"single_quote_string": {
			"name": "string.quoted.single.beml",
			"begin": "'",
			"beginCaptures": {
				"0": { "name": "punctuation.definition.string.begin.beml" }
			},
			"end": "'|(?:\\\\\\\\)*[^\\\\]$",
			"endCaptures": {
				"0": { "name": "punctuation.definition.string.end.beml" }
			},
			"patterns": [{
				"include": "#string_escaped_char"
			}]
		},
		"double_quote_string": {
			"name": "string.quoted.double.beml",
			"begin": "\"",
			"beginCaptures": {
				"0": { "name": "punctuation.definition.string.begin.beml" }
			},
			"end": "\"|(?:\\\\\\\\)*[^\\\\]$",
			"endCaptures": {
				"0": { "name": "punctuation.definition.string.end.beml" }
			},
			"patterns": [{
				"include": "#string_escaped_char"
			}]
		},
		"multiline_string": {
			"name": "string.quoted.block.beml",
			"begin": "`",
			"beginCaptures": {
				"0": { "name": "punctuation.definition.string.begin.beml" }
			},
			"end": "`",
			"endCaptures": {
				"0": { "name": "punctuation.definition.string.end.beml" }
			},
			"patterns": []
		},
		"string_escaped_char": {
			"patterns": [{
				"name": "constant.character.escape.beml",
				"match": "\\\\(\\\\|['\"/bfnrt]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})"
			}, {
				"name": "invalid.illegal.unknown-escape.beml",
				"match": "\\\\."
			}]
		},
		"inline_comment": {
			"name": "comment.line.double-slash.beml",
			"match": "//.*",
			"patterns": []
		},
		"multiline_comment": {
			"name": "comment.block.beml",
			"begin": "/\\*",
			"end": "\\*/",
			"patterns": []
		}
	},
	"scopeName": "source.beml"
}